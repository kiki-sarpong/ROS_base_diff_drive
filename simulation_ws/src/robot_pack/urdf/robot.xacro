<?xml version="1.0" ?>
<robot name="simple_robot" xmlns:xacro="http://ros.org/wiki/xacro" >
<xacro:include filename = "$(find robot_pack)/urdf/robot.plugins.xacro"/>
<xacro:include filename = "$(find robot_pack)/urdf/common_properties.xacro"/>


<xacro:property name="astra_cam_py" value="-0.0125"/>
<xacro:property name="astra_depth_rel_rgb_py" value="0.0250" />
<xacro:property name="astra_cam_rel_rgb_py"   value="-0.0125" />
<xacro:property name="astra_dae_display_scale"   value="0.8" />
<xacro:property name="M_PI"   value="3.142" />


<!--INERTIAL VALUES ARE NOT ENTIRELY ACCURATE-->

    <!-- Gazebo plugin initialization -->
    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>/simple_robot</robotNamespace> This robot name is the same as robot name at the top
        </plugin>
    </gazebo>
     <!-- ////////////////////////// === BASE FOOTPRINT ==== //////////////////////////////////// -->

    <link name="base_footprint"/>

     <!-- ////////////////////////// === BASE LINK ==== //////////////////////////////////// -->
   <!-- Main base link -->
    <link name="base_link">
        <visual>
            <origin xyz="0.001 0 -0.034" rpy="0 0 ${M_PI/2}"/>
                <geometry>
                    <mesh filename="package://robot_pack/meshes/base_plate.dae" />
                </geometry>
            <material name = "white"/>
        </visual>

        <collision>
            <geometry>
              <cylinder length="0.10938" radius="0.178"/>
            </geometry>
            <origin xyz="0.0 0 0.05949" rpy="0 0 0"/>
        </collision>

        <inertial>
        <!-- COM experimentally determined -->
        <origin xyz="0.01 0 0"/>
        <mass value="5"/> <!-- 2.4/2.6 kg for small/big battery pack -->

        <inertia ixx="0.0445899935" ixy="0.0" ixz="0.0"
                 iyy="0.0445899935" iyz="0.0"
                 izz="0.07920999999999999" />
       </inertial>
    </link>

    This is for color and physical properties in Gazebo, color won't work with the material tag in gazebo
    only for URDF coloring
    <gazebo reference="base_link">
        <mu1>10.0</mu1>
        <mu2>10.0</mu2>
        <material>Gazebo/DarkGrey</material>
    </gazebo>

<!--/////////////////////////////////////////////sensor laser/////////-->

<link name="sensor_laser">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <cylinder radius="0.03" length="0.03"/>
      </geometry>
      <material name="white" />
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.03" length="0.03"/>
      </geometry>
    </collision>

    <inertial> wrong inertial values.....
        <mass value="0.01" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.001" ixy="0.0" ixz="0.0"
                 iyy="0.001" iyz="0.0"
                 izz="0.001" />
      </inertial>
  </link>

<!--/////////////////////////////////////////////IMU sensor/////////-->
<link name="imu_sensor">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <cylinder radius="0.009" length="0.009"/>
      </geometry>
      <material name="white" />
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.009" length="0.009"/>
      </geometry>
    </collision>

    <inertial> wrong inertial values.....
        <mass value="0.01" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.001" ixy="0.0" ixz="0.0"
                 iyy="0.001" iyz="0.0"
                 izz="0.001" />
      </inertial>
  </link>

    <gazebo reference="imu_sensor">
        <mu1>10.0</mu1>
        <mu2>10.0</mu2>
        <material>Gazebo/Yellow</material>
    </gazebo>




    <!-- ////////////////////////// === WHEEL LINKS ==== //////////////////////////////////// -->
<!--wheel 1--> left  wheel
    <link name="wheel_link_1">
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <mesh filename="package://robot_pack/meshes/wheel.dae"/>
            </geometry>
        </collision>

        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <cylinder length="0.0206" radius="0.0352"/>
            </geometry>
            <material name="blue"/>
        </visual>

        <inertial>
            <mass value="0.01" />
            <origin xyz="0 0 0" />
            <inertia ixx="0.001" ixy="0.0" ixz="0.0"
                     iyy="0.001" iyz="0.0"
                     izz="0.001" />
      </inertial>
    </link>

    <gazebo reference="wheel_link_1">
        <mu1>1.0</mu1> 
        <mu2>1.0</mu2>
        <kp>1000000.0</kp>
        <kd>100.0</kd>
        <minDepth>0.001</minDepth>
        <maxVel>1.0</maxVel> 
        <material>Gazebo/Red</material>
    </gazebo>

<!--wheel 2--> right wheel
    <link name="wheel_link_2">
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>

            <geometry>
              <mesh filename="package://robot_pack/meshes/wheel.dae"/>
            </geometry>
        </collision>

        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <cylinder length="0.0206" radius="0.0350"/>
            </geometry>
            <material name="blue"/>
        </visual>

        <inertial>
            <mass value="0.01" />
            <origin xyz="0 0 0" />
            <inertia ixx="0.001" ixy="0.0" ixz="0.0"
                     iyy="0.001" iyz="0.0"
                     izz="0.001" />
       </inertial>
    </link>

    <gazebo reference="wheel_link_2">
        <mu1>1.0</mu1> 
        <mu2>1.0</mu2>
        <kp>1000000.0</kp>
        <kd>100.0</kd>
        <minDepth>0.001</minDepth>
        <maxVel>1.0</maxVel> <mu1>10.0</mu1>
        <mu2>10.0</mu2>
        <material>Gazebo/Red</material>
    </gazebo>

<!--    caster link-->
    <link name="caster_front_link">
      <collision>
        <geometry>
          <cylinder length="0.0176" radius="0.017"/>
        </geometry>
        <origin rpy="0 0 0" xyz="0 0 0"/>
      </collision>
      <inertial>
        <mass value="0.01" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.001" ixy="0.0" ixz="0.0"
                 iyy="0.001" iyz="0.0"
                 izz="0.001" />
      </inertial>
    </link>

    <link name="caster_back_link">
      <collision>
        <geometry>
          <cylinder length="0.0176" radius="0.017"/>
        </geometry>
        <origin rpy="0 0 0" xyz="0 0 0"/>
      </collision>
      <inertial>
        <mass value="0.01" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.001" ixy="0.0" ixz="0.0"
                 iyy="0.001" iyz="0.0"
                 izz="0.001" />
      </inertial>
    </link>

<!--    caster ball-->
    <link name="front_caster_ball">
        <visual>
            <geometry>
              <sphere radius="0.01"/>
            </geometry>
            <origin rpy="0 0 0" xyz="0 0 0"/>
      </visual>
      <collision>
            <geometry>
              <sphere radius="0.0265"/>  higher collision creates a bigger ball to stablize the robot
            </geometry>
            <origin rpy="0 0 0" xyz="0 0 0"/>
      </collision>
      <inertial>
        <mass value="1" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.00011560000000000002" ixy="0.0" ixz="0.0"
                 iyy="0.00011560000000000002" iyz="0.0"
                 izz="0.00011560000000000002" />
      </inertial>
    </link>

    <link name="back_caster_ball">
        <visual>
            <geometry>
              <sphere radius="0.01"/>
            </geometry>
            <origin rpy="0 0 0" xyz="0 0 0"/>
      </visual>
      <collision>
            <geometry>
              <sphere radius="0.0265"/>
            </geometry>
            <origin rpy="0 0 0" xyz="0 0 0"/>
      </collision>
      <inertial>
        <mass value="1" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.00011560000000000002" ixy="0.0" ixz="0.0"
                 iyy="0.00011560000000000002" iyz="0.0"
                 izz="0.00011560000000000002" />
      </inertial>
    </link>


        <!-- ////////////////////////// === Joints === //////////////////////////////////// -->
  I can spawn all the camera links at origin 0 0 0  but I use the joints to move them to the positions I want them in.

     <joint name="base_joint" type="fixed">
      <origin xyz="0 0 0.0102" rpy="0 0 0" />
      <parent link="base_footprint"/>
      <child link="base_link" />
    </joint>

     <joint name="caster_front_joint" type="fixed">
      <parent link="base_link"/>
      <child link="caster_front_link"/>
      <origin xyz="0.115 0.0 0.007" rpy="${-M_PI/2} 0 0"/>
    </joint>

    <joint name="caster_back_joint" type="fixed">
      <parent link="base_link"/>
      <child link="caster_back_link"/>
      <origin xyz="-0.135 0.0 0.009" rpy="${-M_PI/2} 0 0"/>
    </joint>

    <joint name="caster_back_ball_joint" type="fixed">
      <parent link="caster_back_link"/>
      <child link="back_caster_ball"/>
      <origin xyz="0.01 0.0 0.0" rpy="${-M_PI/2} 0 0"/>
    </joint>

    <joint name="caster_front_ball_joint" type="fixed">
      <parent link="caster_front_link"/>
      <child link="front_caster_ball"/>
      <origin xyz="0.01 0.0 0.0" rpy="${-M_PI/2} 0 0"/>
    </joint>


    <!-- joint = base_link to wheel_1_link -->       wheel joint 1--top left
    <joint name="wheel_1_joint" type="continuous">
        <parent link="base_link"/>
        <child link="wheel_link_1"/>
        <origin xyz="0 ${0.28/2} 0.026" rpy="${-M_PI/2} 0 0"/>
        <axis xyz="0 0 1"/>
    </joint>

    <!-- joint = base_link to wheel_2_link -->       wheel joint 2  --top right
    <joint name="wheel_2_joint" type="continuous">
        <parent link="base_link"/>
        <child link="wheel_link_2"/>
        <origin xyz="0.00 -${0.28/2} 0.026" rpy="${-M_PI/2} 0 0"/>
        <axis xyz="0 0 1"/>
    </joint>


    <!--    sensor laser-->
     <joint name="joint_sensor_laser" type="fixed">
        <origin xyz="0.0 0 0.355" rpy="0 0 0"/>
        <parent link="base_link"/>
        <child link="sensor_laser"/>
      </joint>
<!--   imu sensor-->
      <joint name="joint_imu_sensor" type="fixed">
        <origin xyz="0.0 0 0.057" rpy="0 0 0"/>
        <parent link="base_link"/>
        <child link="imu_sensor"/>
      </joint>

    <transmission name="tran1">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="wheel_1_joint">
            <hardwareInterface>EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="motor1">
            <hardwareInterface>EffortJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>

    <transmission name="tran2">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="wheel_2_joint">
            <hardwareInterface>EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="motor2">
            <hardwareInterface>EffortJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>


    ///////////////////////////////////////////////////////////////////////////////////////////
    <!-- Adding Astra -->
    <link name="camera_link">
      <visual>
            <origin xyz="-0.04 0.02 -0.01" rpy="${M_PI/2} 0 ${M_PI/2}"/>
            <geometry>
              <mesh filename="package://robot_pack/meshes/astra.dae" scale="${astra_dae_display_scale} ${astra_dae_display_scale} ${astra_dae_display_scale}"/>
            </geometry>
      </visual>

      <collision>
            <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
            <geometry>
            <box size="0.0400 0.1650 0.0300"/>
      </geometry>
      </collision>

      <inertial>
            <mass value="0.564" />
            <origin xyz="0 0 0" />
            <inertia ixx="0.003881243" ixy="0.0" ixz="0.0"
                     iyy="0.000498940" iyz="0.0"
                     izz="0.003879257" />
      </inertial>
    </link>

     <link name="camera_rgb_frame"/>
    <link name="camera_rgb_optical_frame"/>
    <link name="camera_depth_optical_frame"/>
     <link name="camera_depth_frame"/>


    <joint name="camera_rgb_joint" type="fixed">
      <origin xyz="-0.09 0 0.25"
              rpy="0 0 0"/>
      <parent link="base_link"/>
      <child link="camera_rgb_frame" />
    </joint>

    <joint name="camera_rgb_optical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
      <parent link="camera_rgb_frame" />
      <child link="camera_rgb_optical_frame" />
    </joint>


    <joint name="camera_joint" type="fixed">
      <origin xyz="0 ${astra_cam_rel_rgb_py} 0"
              rpy="0 0 0"/>
      <parent link="camera_rgb_frame"/>
      <child link="camera_link"/>
    </joint>


    <joint name="camera_depth_joint" type="fixed">
      <origin xyz="0 ${astra_depth_rel_rgb_py} 0" rpy="0 0 0" />
      <parent link="camera_rgb_frame" />
      <child link="camera_depth_frame" />
    </joint>

    <joint name="camera_depth_optical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
      <parent link="camera_depth_frame" />
      <child link="camera_depth_optical_frame" />
    </joint>


</robot>